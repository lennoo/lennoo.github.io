<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Lennoo</title><link>http://blog.lennoo.com/posts/</link><description>Recent content in Posts on Lennoo</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 25 May 2012 23:03:08 +0800</lastBuildDate><atom:link href="http://blog.lennoo.com/posts/rss.xml" rel="self" type="application/rss+xml"/><item><title>Django调整</title><link>http://blog.lennoo.com/posts/start_django/</link><pubDate>Fri, 25 May 2012 23:03:08 +0800</pubDate><guid>http://blog.lennoo.com/posts/start_django/</guid><description>Django == 1.10 配置 Tune your AUTH_PASSWORD_VALIDATORS setting by removing the django.contrib.auth.password_validation.CommonPasswordValidator out there. Password validation is a new feature introduced in Django 1.9. This password is too short. It must contain at least 8 characters. This password is entirely numeric.</description></item><item><title>Amazon EC2注册及应用</title><link>http://blog.lennoo.com/posts/amazon_ec2_register_application/</link><pubDate>Fri, 25 May 2012 12:34:56 +0800</pubDate><guid>http://blog.lennoo.com/posts/amazon_ec2_register_application/</guid><description>&lt;p>Amazon EC2是Amazon云计算的一部分，相当于一台VPS，现提供有限额的一年的免费使用时间。注册Amazon EC2需要有Visa或Master的信用卡进行支付验证，会扣除一美元，然后再把这钱重新返还。（我出现2次扣款短信，实际登陆只发现可用信用额少，但没有出应付款帐单）。&lt;/p>
&lt;p>注册完Amazon EC2后，需要创建实例可部分参考 
&lt;a href="http://lanhl.com/2011-amazon-ec2-ubuntu-lamp-wordpress.html" title="Amazon EC2 Ubuntu折腾笔记" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 Amazon EC2 Ubuntu折腾笔记
 
 &lt;i class="fa fa-external-link-alt">&lt;/i>
 
&lt;/a>，有几点需要注意：一是区域测试过日本机房和新加坡机房，对我所处的位置来说，新加坡的ping时间在200ms水平，而日本在300ms水平，新加坡的更适合。二是登陆用的是密钥形式，如用putty需要格式转换，另不同的ami的登陆名不同，ubuntu官方的ami的id为099720109477，用户名为ubuntu，而不是Amazon实例的ec2-user。&lt;/p></description></item><item><title>简简单单用py2exe打包python脚本</title><link>http://blog.lennoo.com/posts/pack_python_script_using_py2exe/</link><pubDate>Mon, 11 Aug 2008 19:19:08 +0800</pubDate><guid>http://blog.lennoo.com/posts/pack_python_script_using_py2exe/</guid><description>&lt;p>py2exe是实用的python脚本工具，可以将python脚本程序转换为exe执行文件。这样你的python程序就可以没有安装python运行时环境的电脑里运行了。py2exe方便地提取出python运行时所需要的文件档案，你需要做的就是写一个两三行的安装脚本文件。&lt;/p>
&lt;p>py2exe可以从 
&lt;a href="http://sourceforge.net/projects/py2exe/" title="http://sourceforge.net/projects/py2exe/" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 http://sourceforge.net/projects/py2exe/
 
 &lt;i class="fa fa-external-link-alt">&lt;/i>
 
&lt;/a> 下载，唯一需要注意的是下载与你python版本号对应的版本，简单的英文教程 
&lt;a href="http://www.py2exe.org/index.cgi/Tutorial" title="http://www.py2exe.org/index.cgi/Tutorial" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 http://www.py2exe.org/index.cgi/Tutorial
 
 &lt;i class="fa fa-external-link-alt">&lt;/i>
 
&lt;/a> 非常容易入门。&lt;/p></description></item><item><title>Python类、模块、包</title><link>http://blog.lennoo.com/posts/python_class_module_package/</link><pubDate>Thu, 24 Jul 2008 19:42:08 +0800</pubDate><guid>http://blog.lennoo.com/posts/python_class_module_package/</guid><description>&lt;p>Python在处理功能复用和功能颗粒度划分时采用了类、模块、包的结构。这种处理跟C++中的类和名字空间类似，但更接近于Java所采用的概念。&lt;/p></description></item><item><title>wxPython和XRC文件实现i18n</title><link>http://blog.lennoo.com/posts/wxpython_xrc_i18n/</link><pubDate>Tue, 15 Jul 2008 20:21:08 +0800</pubDate><guid>http://blog.lennoo.com/posts/wxpython_xrc_i18n/</guid><description>&lt;p>应用程序国际化，在开源世界里常以i18n被提及，i18n是Internationalization的简写，正好18个字母。在wxPython程序进行i18n，如果字符串是编码在源文件中时，完全可按照python程序的i18n的方法，即使用gexttext和locale模块。而wxPython程序在使用XRC文件做为界面资源时，则应使用wx.Locale模块，它封装了区域化相关的操作。i18n，或者国际化实际上涉及到语言习惯，数字格式等等类别的内容。这里只介绍语言多国化，将一个简单的英文程序转换为中文，涉及到源文件，可从这里下载。&lt;/p></description></item><item><title>Cygwin，以及远程登陆Linux桌面</title><link>http://blog.lennoo.com/posts/cygwin_remote_connect_linux/</link><pubDate>Thu, 03 Jul 2008 21:55:08 +0800</pubDate><guid>http://blog.lennoo.com/posts/cygwin_remote_connect_linux/</guid><description>&lt;h1 id="安装cygwin">安装Cygwin
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%85cygwin">&lt;/a>
&lt;/h1>&lt;p>在cgywin官方主页下载安装文件setup.exe,这只是一个网络安装包，体积很小。cgywin包含了许多GNU下的应用程序，真正安装时会根据你选择的组件，会自动去网上下载安装的。在国内最好使用镜像服务，这样速度会提高很多，建议去http://www.cygwin.net.cn/ 或 
&lt;a href="http://www.cygwin.cn/" title="http://www.cygwin.cn/" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 http://www.cygwin.cn/
 
 &lt;i class="fa fa-external-link-alt">&lt;/i>
 
&lt;/a> 下载上述的安装包，并在安装进行到Choose A Download Site这个步骤时，选择合理的镜像。由于中国南北网速的差异，上述两个地址都尝试一下，看看哪个对你而言速度更快一些。&lt;/p></description></item><item><title>简单的QQ代理验证</title><link>http://blog.lennoo.com/posts/simple_qq_proxy_test/</link><pubDate>Wed, 02 Jul 2008 22:13:08 +0800</pubDate><guid>http://blog.lennoo.com/posts/simple_qq_proxy_test/</guid><description>&lt;p>QQ在许多公司内部被禁止使用,为了能使用QQ,稍微懂点儿计算机的人都知道用代理。QQ提供了socket和http代理这两种功能，socket代理功能强大，但一般公司对外允许连接的端口号比较有限，难以利用。大多数公司是允许连接外部的80端口的，这样使用QQ的http代理是可行的。但是找到能用的QQ代理有点儿麻烦，因此下面的Python代码提供了自动进行QQ代理验证的功能。&lt;/p></description></item><item><title>好用的Subversion属性功能</title><link>http://blog.lennoo.com/posts/useful_subversion_property/</link><pubDate>Mon, 30 Jun 2008 12:06:08 +0800</pubDate><guid>http://blog.lennoo.com/posts/useful_subversion_property/</guid><description>&lt;p>Subversion的属性是非常好用的功能,它将一些工作自动化，实现为受版本控制的源文件添加元信息的作用。属性是外部不可见的，可以简单认为是附加上在文件上的信息，和文件大小之类的信息是一样的，只不过他是通过subversion来管理的。属性的名称和值可以是你希望的任何值，限制就是名称必须是可读的文本，并且最好的一点是这些属性也是版本化的，就像你的文本文件内容，你可以像提交文本修改一样修改、提交和恢复属性修改，当你更新时也会接收到别人的属性修改—你不必为适应属性改变你的工作流程。&lt;/p></description></item><item><title>Boost.Program_options简述</title><link>http://blog.lennoo.com/posts/boost_program_options/</link><pubDate>Sun, 15 Jun 2008 21:03:08 +0800</pubDate><guid>http://blog.lennoo.com/posts/boost_program_options/</guid><description>&lt;h1 id="介绍">介绍
&lt;a class="header-anchor" href="#%e4%bb%8b%e7%bb%8d">&lt;/a>
&lt;/h1>&lt;p>命令行接口是普遍,基础的人机交互接口，从命令行提取程序的运行时选项的方法有很多。你可以自己编写相对应的完整的解析函数，或许你有丰富的C语言编程经验，熟知getopt()函数的用法，又或许使用Python的你已经在使用optparse库来简化这一工作。大家在平时不断地谈及到“不要重复造轮子”，那就需要掌握一些顺手的库，这里介绍一种C++方式来解析命令行选项的方法，就是使用Boost.Program_options库。&lt;/p>
&lt;p>program_options提供程序员一种方便的命令行和配置文件进行程序选项设置的方法。使用program_options库而不是你自己动手写相关的解析代码，因为它更简单，声明程序选项的语法简洁，并且库自身也非常小。将选项值转换为适合的类型值的工作也都能自动完成。库有着完备的错误检查机制，如果自己手写解析代码时，就可能会错过对一些出错情况的检查了。最后，选项值不仅能从命令行获取，也能从配置文件，甚至于环境变量中提取，而这些选择不会增加明显的工作量。&lt;/p></description></item><item><title>Xmanager远程连接ubuntu</title><link>http://blog.lennoo.com/posts/xmanage_remote_connect_ubuntu/</link><pubDate>Sun, 01 Jun 2008 21:10:08 +0800</pubDate><guid>http://blog.lennoo.com/posts/xmanage_remote_connect_ubuntu/</guid><description>涉及到软件：Xmanager 1.3.9 / Windows xp, ubuntu hardy 在ubuntu机器上配置好gdm,修改/etc/gdm/gdm.conf-custom,对照添加如下</description></item><item><title>强大的网络传输工具cURL和libcurl</title><link>http://blog.lennoo.com/posts/powerful_network_tool_curl_libcurl/</link><pubDate>Mon, 26 May 2008 11:40:08 +0800</pubDate><guid>http://blog.lennoo.com/posts/powerful_network_tool_curl_libcurl/</guid><description>&lt;p>cURL是一个利用URL语法的文件传输工具,是基于libcurl的前端命令行工具。它支持很多协议：FTP, FTPS, HTTP, HTTPS, GOPHER, TELNET, DICT, FILE 以及 LDAP。 它同样支持HTTPS认证，HTTP POST方法, HTTP PUT方法, FTP上传, kerberos认证, HTTP上传, 代理服务器, cookies, 用户名/密码认证, 下载文件断点续传, 上载文件断点续传, http代理服务器管道（ proxy tunneling）, 甚至它还支持IPv6, socks5代理服务器,通过http代理服务器上传文件到FTP服务器等等，功能十分强大。&lt;/p></description></item><item><title>可爱的Vim</title><link>http://blog.lennoo.com/posts/cute_vim/</link><pubDate>Sun, 25 May 2008 20:19:00 +0800</pubDate><guid>http://blog.lennoo.com/posts/cute_vim/</guid><description>&lt;p>Vim是功能强大的文本编辑器,但是每个工具都有其针对的适用群体。如果你只是偶尔做些文本编辑工作的话，那灵活而又显得繁琐的设置，以及特别的操作方式可能不适合你。但是你是跟我一样，是个平平凡凡的程序员，每天要花费大量时间在写代码,把弄着各式各样的程序语言:C\C++,Python,Tcl,Html,Xml,&amp;hellip;，那么你可能需要像Vim这样的工具，即使你要在它上面花费些时间去熟悉和适应它。&lt;/p>
&lt;p>先讲述一下，我跟Vim相处的过程，这是个从认识，到抛弃，到再认识，到再学习，到喜欢的过程。最早接触到Vim是在Solaris上，需要修改编辑一些配置文件，看着其他工程师们手指随意地在键盘上敲击，就完成内容的修改，根本没有动用到什么鼠标，那是好生羡慕。严格意义来说，那时候碰到还不是Vim，只是VI而已。在终端上工作，没有什么Notepad之类的程序，只好把指令抄在纸上，查查网上的资料，学会了h,j,k,l,w,q,e,这几个简单指类来进行简单的文本查看工作，仅此而己。后来在Windows上安装了VIM，但是挣腾了几下，没有适应过来，也就只好使用UltraEdit了。UltraEdit对一般的纯文本，按Windows习惯来说是蛮好使的。再后来，玩了会儿ruby，又装起了Vim，但是那时候的对Vim的使用也只是限于上面的简单的指令，再加上Vim的插件，来完成语法高亮，ruby中的MVC文件的方便跳转而已，还是没有习惯Vim，有时候还是不经意用UltraEdit来打开查看编辑文件。直到最近，需要编写Docbook，以及用Python，才真正花费了大量时间来学习使用Vim，才真正认识到到它的可爱。&lt;/p></description></item><item><title>Boost.Lambda是什么?</title><link>http://blog.lennoo.com/posts/boost_lambda_brief/</link><pubDate>Sun, 18 May 2008 16:03:00 +0800</pubDate><guid>http://blog.lennoo.com/posts/boost_lambda_brief/</guid><description>&lt;h1 id="boostlambda是什么">Boost.Lambda是什么?
&lt;a class="header-anchor" href="#boostlambda%e6%98%af%e4%bb%80%e4%b9%88">&lt;/a>
&lt;/h1>&lt;p>Boost Lambda库是C++模板库,以C++语言实现了lambda抽象.Lambda这个术语来自函数编程语言和lambda闭包理论,lambda抽象实际上定义了匿名函数.了解过C#新引入的匿数函数特性或Lisp编程的人，对这些概念理解会有很大帮助.Lambda库设计的主要动机是为STL算法提供灵活方便的定义匿名函数对象的机制.这个Lambda库究竟是有什么用呢?代码胜千言!看下面将STL容器中的元素打印到标准输出上的代码.&lt;/p></description></item><item><title>Say Hello to Glade</title><link>http://blog.lennoo.com/posts/say_hello_to_glade/</link><pubDate>Thu, 27 Mar 2008 20:49:00 +0800</pubDate><guid>http://blog.lennoo.com/posts/say_hello_to_glade/</guid><description>&lt;p>Glade是针对GTK+工具箱与GNOME桌面开发环境的快速图形界面开发工具.用Glade设计的用户接口以XML的文件形式保存,然后根据需要由程序通过libglade库文件来动态加载.因为使用了libglade库,Glade XML文件能够被C,C++,Java,Perl,Python,C#等等语言所支持.针对其他未涉及的语言的支持也是方便的.&lt;/p>
&lt;p>在网上可以见到某些关于Glade的教程,大都是关于Linux平台和Glade 2的,因为原先Glade作为快速开发工具,集成代码生成功能,生成C文件.所以常常有初学者对网上某些教程所提及的&amp;quot;generate&amp;quot;(生成代码)功能表示迷惑,在新版本的Glade-3上找不到对应的功能.&lt;/p></description></item><item><title>Say Hello to GTK+</title><link>http://blog.lennoo.com/posts/say_hello_to_gtk+/</link><pubDate>Sun, 23 Mar 2008 15:18:00 +0800</pubDate><guid>http://blog.lennoo.com/posts/say_hello_to_gtk+/</guid><description>&lt;p>Windows下的C++程序员在开发图形用户界面时,首先想到可能就是MFC了.对于
&lt;a href="http://www.gtk.org/" title="GTK&amp;#43;" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 GTK+
 
 &lt;i class="fa fa-external-link-alt">&lt;/i>
 
&lt;/a> 这种GNU/Linux上出生出来的东西,就感到陌生了．GTK+是类似于MFC的图形界面库,跟MFC不同的是,它不是用C++,而是用C语言实现了面对对象的机制,但能与许多语言绑定,并具有跨平台的特性.比如与Python的结合,就产生PyGTK,&amp;ldquo;初识PyGTK&amp;quot;就介结了其在Windows平台的安装.&lt;/p></description></item><item><title>小Q和小A的故事之EFS加密</title><link>http://blog.lennoo.com/posts/efs_faq_story/</link><pubDate>Sun, 16 Mar 2008 15:37:56 +0800</pubDate><guid>http://blog.lennoo.com/posts/efs_faq_story/</guid><description>&lt;p>自从去年底娱乐圈曝出了&amp;quot;艳照门&amp;quot;事件后, 小Q就开始注意自己的私密文件了,在网上google加密软件,想把那些珍藏的AV小电影和情感小日记加密起来,防止一个不小心被人公布.网上的私人出品的小加密软件不敢用,怕被别人留了后门,至于安全性也没有保证.后在网上经高手指点,使用WinRAR软件的加密功能,把一个个文件压缩成包,并设置了密码.这东西倒是简单,但是小Q常常需要回顾一下这些小电影,以解单身之苦,偶尔又写下日记.这样一来,常常就需要输入密码,解压,解渴,压缩,麻烦又耗时，且WinRAR密码又不能太简单，不然有被暴力破解的可能．&lt;/p></description></item><item><title>初识PyGTK</title><link>http://blog.lennoo.com/posts/hello_pygtk/</link><pubDate>Wed, 12 Mar 2008 19:43:00 +0800</pubDate><guid>http://blog.lennoo.com/posts/hello_pygtk/</guid><description>&lt;p>PyGTK让你用Python轻松创建具有图形用户界面的程序.底层的GTK+提供了各式的可视元素和功能,如果需要,你能开发在GNOME桌面系统运行的功能完整的软件.&lt;/p>
&lt;p>PyGTK真正具有跨平台性,它能不加修改地,稳定运行各种操作系统之上,如Linux,Windows,MacOS等.除了简单易用和快速的原型开发能力外,PyGTK还有一流的处理本地化语言的独特功能.&lt;/p></description></item><item><title>PC-Lint简介</title><link>http://blog.lennoo.com/posts/pc_lint/</link><pubDate>Wed, 30 Jan 2008 15:18:08 +0800</pubDate><guid>http://blog.lennoo.com/posts/pc_lint/</guid><description>&lt;p>PC-lint for C/C++是由Gimpel软件公司于1985年开发的代码静态分析工具,它能有效地发现程序语法错误、潜在的错误隐患、不合理的编程习惯等。&lt;/p>
&lt;p>FlexeLint for C/C++是在PC_lint在windows平台获得成功后，同样由Gimpel公司开发的，以源代码形式发布的，在Unix/Linux平台上的静态代码分析工具。&lt;/p>
&lt;p>本文主要介绍PC-lint的安装与配置，因此是在windows平台上进行讨论。&lt;/p></description></item></channel></rss>